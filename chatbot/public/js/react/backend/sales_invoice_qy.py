import frappe
from langchain.agents import initialize_agent, Tool, AgentType
from frappe.model.meta import get_meta


def get_doctype_fields_name(doctype):
    doctype_fields = get_meta(doctype)
    fields = [field.fieldname for field in doctype_fields.fields]
    doctype_fields = ', '.join(fields)


sales_channel_details = frappe.db.sql_list(
    "select name from `tabUPRO Sales Channel`")
sales_channels = ', '.join(sales_channel_details)
item_codes_details = frappe.db.sql_list("select name from `tabItem` limit 10")
item_codes = ', '.join(item_codes_details)
customer_details = frappe.db.sql_list("select name from `tabCustomer`")
customers = ', '.join(customer_details)
warehouse_details = frappe.db.sql_list("select name from `tabWarehouse`")
warehouses = ', '.join(warehouse_details)
sales_invoice_fields = get_doctype_fields_name("Sales Invoice")
sales_invoice_item_fields = get_doctype_fields_name("Sales Invoice Item")


def get_revenue_item_wise(query: str):
    print("Query------", query)
    sales_data = frappe.db.sql("""%s""" % (query), as_dict=1)
    return f"""
        Below are the details of region wise sales orders for sales channel, analyse this and provide the information as per user query.\n
        {sales_data}
        # """


sales_invoice = Tool(
    name="GetRevenueItemWise",
    func=get_revenue_item_wise,
    description="""
                Description: The 'GetRevenueItemWise' function to get details for the revenue generated by items. Here's what you need to do
                    1. For this function you need to create a query for the question asked by the user and give it as a argument.
                    2. When creating this query, you should take the table `tabSales Invoice' and set the align name to `si' and the table `tabSales Invoice Item' and set the align name to `sii'. 
                    3. All of the following are columns for the `tabSales Invoice` table. If user gives below columns then it should be taken in the query select.
                        %s 
                    4. All of the following are columns for the `tabSales Invoice Item` table. If user gives below columns then it should be taken in the select.
                        %s
                    
                    5. If user gives %s then it should be taken as up_sales_channel in where condition.
                    6. If user gives %s then it should be taken as item_code in where condition.
                    7. If user gives %s then it should be taken as customer in where condition.
                    8. If user gives %s then it should be taken as set_warehouse in where condition.
                    9. Must take si.territory and si.up_sales_channel in group by. If asked item wise then add sii.item_code also in the group by along with si.territory and si.up_sales_channel.
                        sii.item_code must not be added in the query column if the user asks for sales channel wise. If asked customer wise, you must add si.customer in group by with the already existing group by in the query.
                        If asked warehouse wise, you must add si.set_warehouse in group by with the already existing group by in the query.
                    10. If user gives any date then it should be given in query as si.posting_date in where condition or if user gives month as name or month name as short then that month should be converted to number and given as month(si.posting_date) in condition. And if year is also given then it should be given in year(si.posting_date) in condition.
                        If user ask for year and month, don't give condition in si.posting_date.
                    11. If the user asks for item wise details then you should ask user for input as to which items are required and then give the query in the argument.
                    12. In the query, the column should be given according to the question asked by the user
                    13. Argument should be given to function only as query.

                    A word of caution: if any information is unclear, incomplete, or not confirmed, the function mightss
                    not work correctly.
                
                    """ % (sales_invoice_fields, sales_invoice_item_fields, sales_channels, item_codes, customers, warehouses)
)
